openapi: 3.0.3
info:
  title: Django API Template
  version: 1.0.0
  description: A reusable template for creating Django APIs quickly and efficiently.
    Includes best practices, configurations, and initial setup to jump start your
    Django projects.
paths:
  /api/auth/:
    get:
      operationId: api_auth_retrieve
      tags:
      - api
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Output'
          description: ''
  /api/auth/{subtask_id}/:
    get:
      operationId: api_auth_retrieve_2
      parameters:
      - in: path
        name: subtask_id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - api
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Output'
          description: ''
  /api/auth/{subtask_id}/delete/:
    delete:
      operationId: api_auth_delete_destroy
      parameters:
      - in: path
        name: subtask_id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - api
      responses:
        '204':
          description: No response body
  /api/auth/{subtask_id}/update/:
    put:
      operationId: api_auth_update_update
      parameters:
      - in: path
        name: subtask_id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Input'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Input'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Input'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Input'
          description: ''
  /api/auth/create/:
    post:
      operationId: api_auth_create_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Input'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Input'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Input'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Input'
          description: ''
  /api/auth/login/:
    post:
      operationId: api_auth_login_create
      description: Following https://docs.djangoproject.com/en/5.0/topics/auth/default/#how-to-log-a-user-in
      tags:
      - api
      security:
      - basicAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /api/auth/logout/:
    get:
      operationId: api_auth_logout_retrieve
      tags:
      - api
      responses:
        '200':
          description: No response body
  /api/auth/me/:
    get:
      operationId: api_auth_me_retrieve
      tags:
      - api
      responses:
        '200':
          description: No response body
  /api/projects/:
    get:
      operationId: api_projects_retrieve
      tags:
      - api
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Output'
          description: ''
  /api/projects/{project_id}/:
    get:
      operationId: api_projects_retrieve_2
      parameters:
      - in: path
        name: project_id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - api
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Output'
          description: ''
  /api/projects/{project_id}/delete/:
    delete:
      operationId: api_projects_delete_destroy
      parameters:
      - in: path
        name: project_id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - api
      responses:
        '204':
          description: No response body
  /api/projects/{project_id}/update/:
    put:
      operationId: api_projects_update_update
      parameters:
      - in: path
        name: project_id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Input'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Input'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Input'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Input'
          description: ''
  /api/projects/create/:
    post:
      operationId: api_projects_create_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Input'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Input'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Input'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Input'
          description: ''
  /api/schema/:
    get:
      operationId: api_schema_retrieve
      description: |-
        OpenApi3 schema for this API. Format can be selected via content negotiation.

        - YAML: application/vnd.oai.openapi
        - JSON: application/vnd.oai.openapi+json
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - json
          - yaml
      - in: query
        name: lang
        schema:
          type: string
          enum:
          - af
          - ar
          - ar-dz
          - ast
          - az
          - be
          - bg
          - bn
          - br
          - bs
          - ca
          - ckb
          - cs
          - cy
          - da
          - de
          - dsb
          - el
          - en
          - en-au
          - en-gb
          - eo
          - es
          - es-ar
          - es-co
          - es-mx
          - es-ni
          - es-ve
          - et
          - eu
          - fa
          - fi
          - fr
          - fy
          - ga
          - gd
          - gl
          - he
          - hi
          - hr
          - hsb
          - hu
          - hy
          - ia
          - id
          - ig
          - io
          - is
          - it
          - ja
          - ka
          - kab
          - kk
          - km
          - kn
          - ko
          - ky
          - lb
          - lt
          - lv
          - mk
          - ml
          - mn
          - mr
          - ms
          - my
          - nb
          - ne
          - nl
          - nn
          - os
          - pa
          - pl
          - pt
          - pt-br
          - ro
          - ru
          - sk
          - sl
          - sq
          - sr
          - sr-latn
          - sv
          - sw
          - ta
          - te
          - tg
          - th
          - tk
          - tr
          - tt
          - udm
          - ug
          - uk
          - ur
          - uz
          - vi
          - zh-hans
          - zh-hant
      tags:
      - api
      security:
      - basicAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/vnd.oai.openapi:
              schema:
                type: object
                additionalProperties: {}
            application/yaml:
              schema:
                type: object
                additionalProperties: {}
            application/vnd.oai.openapi+json:
              schema:
                type: object
                additionalProperties: {}
            application/json:
              schema:
                type: object
                additionalProperties: {}
          description: ''
  /api/tasks/:
    get:
      operationId: api_tasks_retrieve
      tags:
      - api
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Output'
          description: ''
  /api/tasks/{task_id}/:
    get:
      operationId: api_tasks_retrieve_2
      parameters:
      - in: path
        name: task_id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - api
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Output'
          description: ''
  /api/tasks/{task_id}/delete/:
    delete:
      operationId: api_tasks_delete_destroy
      parameters:
      - in: path
        name: task_id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - api
      responses:
        '204':
          description: No response body
  /api/tasks/{task_id}/update/:
    put:
      operationId: api_tasks_update_update
      parameters:
      - in: path
        name: task_id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Input'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Input'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Input'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Input'
          description: ''
  /api/tasks/create/:
    post:
      operationId: api_tasks_create_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Input'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Input'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Input'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Input'
          description: ''
components:
  schemas:
    Input:
      type: object
      properties:
        title:
          type: string
          maxLength: 255
        description:
          type: string
        status:
          $ref: '#/components/schemas/StatusEnum'
        task:
          type: string
          format: uuid
        assignee:
          type: array
          items:
            type: string
            format: uuid
    Output:
      type: object
      properties:
        id:
          type: string
          format: uuid
        title:
          type: string
        description:
          type: string
        status:
          $ref: '#/components/schemas/StatusEnum'
        task:
          type: string
          format: uuid
        assignee:
          type: array
          items:
            type: string
            format: uuid
      required:
      - assignee
      - description
      - id
      - status
      - task
      - title
    StatusEnum:
      enum:
      - 1
      - 2
      - 3
      - 4
      type: integer
      description: |-
        * `1` - To Do
        * `2` - In Progress
        * `3` - Completed
        * `4` - On Hold
  securitySchemes:
    basicAuth:
      type: http
      scheme: basic
    cookieAuth:
      type: apiKey
      in: cookie
      name: sessionid
